// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1289.stronghold.subsystems;

import org.usfirst.frc1289.stronghold.RobotMap;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class Arm extends Subsystem {

    
    private final DigitalInput limitSwitch1 = RobotMap.armLimitSwitch1;
    private final Solenoid pneumaticinout = RobotMap.armPneumaticinout;
    private final Solenoid pneumaticupdown = RobotMap.armPneumaticupdown;
    private boolean ArmUp;
    private boolean ArmOut;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand())
   }
    
    public void ArmUpDown (boolean direction){
    	ArmUp = direction;
    	pneumaticupdown.set(direction);
    	//SmartDashboard.putBoolean("Arm Up", ArmUp);
    }  
    public void ArmInOut (boolean direction){
    	ArmOut = direction;
    	pneumaticinout.set(direction);
    	//System.out.println("Moving arm in/out.\n");
    	//SmartDashboard.putBoolean("Arm Out", ArmOut);
    }
    public boolean getSwitch () {
    	return limitSwitch1.get();
    }
    
    public boolean ArmOutState (){
    	return ArmOut;
    }
    
    public boolean ArmUpState(){
    	return ArmUp;
    }
}
